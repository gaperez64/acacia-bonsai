* Preamble

#+BEGIN_SRC latex
  %% DO NOT EDIT THIS FILE, YOUR CHANGES WILL BE ERASED
  %% PLEASE EDIT define.org


  %% Needed to define what follows.  I don't really need pgf at this point but it
  %% acts up if not included here, because of the redefinition of =_= down there.
  \usepackage{pgf,pgffor}
  \usepackage{afterpackage}

  \makeatletter

  \def\defmath#1#2{\gdef#1{\ensuremath{#2}\xspace}}
  \def\defmathtext#1#2{%
    \xdef\@@star{\csname\expandafter\@gobble\string#1 star\endcsname}
    \xdef\@@nostar{\csname\expandafter\@gobble\string#1 nostar\endcsname}
    \expandafter\gdef\@@nostar{\text{\normalfont#2}\xspace}%
    \expandafter\gdef\@@star{\text{#2}\xspace}%
    \xdef#1{%
      \noexpand\protect\noexpand\@ifstar%
      \unexpanded\expandafter{\@@star}
      \unexpanded\expandafter{\@@nostar}}
    }

#+END_SRC

* Versioning and watermarks

Use ifdraft.
#+BEGIN_SRC latex
  \usepackage{ifdraft}
#+END_SRC

This gets the version number from SVN:
#+BEGIN_SRC latex
  \def\revisionset! #1 !{\gdef\therevision{#1}}
  \def\revision$LastChangedRevision:#1${\revisionset!#1!}
#+END_SRC

Use the =draftwatermark= package to write the revision.
#+BEGIN_SRC latex
  \ifdraft{
    %% babel redefines today.
    \usepackage{draftwatermark}

    \SetWatermarkAngle{0}
    \SetWatermarkLightness{0.7}
    \SetWatermarkFontSize{0.7cm}
    % \SetWatermarkHorCenter
    \SetWatermarkVerCenter{1cm}
    \usepackage{datetime2}
    %\SetWatermarkText{DRAFT (rev: \therevision, comp. on: 
     % \DTMsetstyle{ddmmyy}\DTMtoday, \DTMcurrenttime)}
  }
#+END_SRC

If lineno is used, patch amsmath.
#+BEGIN_SRC latex
  \AfterPackage{lineno}{
    \setlength\linenumbersep{0.5cm}
    \renewcommand\thelinenumber{\color{red!80!black}\arabic{linenumber}~}
    \let\@ldqed\qed
    \renewcommand\qed{\mbox{}\hfill$\@ldqed$}
    \newcommand*\patchAmsMathEnvironmentForLineno[1]{%
      \expandafter\let\csname old#1\expandafter\endcsname\csname #1\endcsname
      \expandafter\let\csname oldend#1\expandafter\endcsname\csname end#1\endcsname
      \renewenvironment{#1}%
      {\linenomath\csname old#1\endcsname}%
      {\csname oldend#1\endcsname\endlinenomath}}% 
    \newcommand*\patchBothAmsMathEnvironmentsForLineno[1]{%
      \patchAmsMathEnvironmentForLineno{#1}%
      \patchAmsMathEnvironmentForLineno{#1*}}%
    \AtBeginDocument{%
      \patchBothAmsMathEnvironmentsForLineno{equation}%
      \patchBothAmsMathEnvironmentsForLineno{align}%
      \patchBothAmsMathEnvironmentsForLineno{flalign}%
      \patchBothAmsMathEnvironmentsForLineno{alignat}%
      \patchBothAmsMathEnvironmentsForLineno{gather}%
      \patchBothAmsMathEnvironmentsForLineno{multline}%
    }
  }
#+END_SRC

Always use lineno in draft mode.
#+BEGIN_SRC latex
  \ifdraft{
    \usepackage[mathlines]{lineno}
    \linenumbers
  }
#+END_SRC

* Typeable
** Complexity classes, logic

#+BEGIN_SRC latex
  \defmathtext\ACz{AC$^0$}
  \defmathtext\FO{FO}
  \defmathtext\MSO{MSO}
  \defmathtext\MOD{MOD}
  \defmathtext\reg{reg}
  \defmathtext\Reg{Reg}
  \newcommand{\AC}[1]{\ensuremath{\text{AC}^{#1}}\xspace}
  \newcommand{\ACC}[1]{\ensuremath{\text{ACC}\ifx*#1\else^{#1}\fi}\xspace}
  \newcommand{\TC}[1]{\ensuremath{\text{TC}^{#1}}\xspace}
  \newcommand{\NC}[1]{\ensuremath{\text{NC}^{#1}}\xspace}
  \newcommand{\CC}[1]{\ensuremath{\text{CC}^{#1}}\xspace}
  \newcommand{\FAC}[1]{\ensuremath{\text{FAC}^{#1}}\xspace}
  \newcommand{\FNC}[1]{\ensuremath{\text{FNC}^{#1}}\xspace}

  \defmathtext\OR{OR}
  \defmathtext\AND{AND}
  \defmathtext\NOT{NOT}
#+END_SRC

** Bold, calligraphy, blackboard, fraktur single letter macros

This defines *en masse* \bX, \cX, \bbX to be bold, calligraphic, and blackboard
versions of the letter X.
#+BEGIN_SRC latex
  \def\modLetter#1#2#3{
    \def\name{\csname #2#1\endcsname}
    \edef\tmp{\noexpand\defmath\name{\noexpand#3{#1}}}
    \tmp
  }
  \foreach \a in {A,...,Z}{
    \modLetter{\a}{c}{\mathcal}
    \modLetter{\a}{b}{\mathbf}
    \modLetter{\a}{bb}{\mathbb}
    \modLetter{\a}{f}{\mathfrak}
  }
#+END_SRC

** Binary operators
#+BEGIN_SRC latex
  \defmath\block{\mathbin{\square}}
  \defmath\dstar{\mathbin{\star\star}}
#+END_SRC

** Misc math

#+BEGIN_SRC latex
  \defmath\binal{\{0, 1\}}
  \defmathtext\lcm{lcm}
  \defmathtext\deg{deg}
  \defmathtext\bwd{bwd}
  \defmathtext\cpre{CPre}
  \defmath\vinit{\vec{v}_\text{init}}
  \defmathtext\safe{Safe}
  \defmath\down{\mathrm{\downarrow}}
  \newcommand{\wh}[1]{\widehat{#1}}
  \defmathtext\ioact{io-act}
  \defmathtext\iact{i-act}
#+END_SRC

** Nonmath

#+BEGIN_SRC latex
  \def\ie{i.e.\xspace}  % Italic is bad style---it draws the attention.
  \def\resp{resp.\xspace}
#+END_SRC

* Anonymization

  #+begin_src latex
    \usepackage{censor}

    \let\anonymize=\xblackout
  #+end_src

* Lists
It should be noted that definitions should be here, not in the core of the
document, since hyperref has to be loaded *after* the definitions.

#+BEGIN_SRC latex
  \AfterPackage{enumitem}{
    \newlist{abenum}{enumerate}{1}
    \setlist[abenum,1]{label={(\alph*)},itemindent=*}

    %% Runin
    \newlist{abenum*}{enumerate*}{1}
    \setlist[abenum*,1]{label={(\alph*)}}
  }
#+END_SRC

* Code

# This uses minted, so requires compiling with =-shell-escape=:
# #+begin_src latex
#   %\usepackage[outputdir=_build]{minted}
#   \usepackage{minted}
#   \newminted{c++}{}
#   \def\cinline#1{\mintinline[style=colorful]{c++}{#1}}
# #+end_src

Using minted is probably the best looks, but not compatible with easychair.
#+begin_src latex
  \def\cinline#1{\texttt{#1}}
#+end_src

* Automata

This relies on TikZ:
#+begin_src latex
  \usepackage{tikz}

  \usetikzlibrary{automata,positioning,calc,through,fit,decorations.pathreplacing}

  %% Automata
  \newenvironment{smallautomaton}[1][]{
      \begin{tikzpicture}[shorten >=1pt,initial text=,
        every state/.style={draw=blue!50,very thick,fill=blue!20},
        node distance=1cm,state/.append style={minimum size=1em},%
        smallstate/.style={state,minimum size=.5em,inner sep=0pt},on grid,auto,#1]}
      {\end{tikzpicture}
  }

#+end_src

* Theorems

Theorems should be defined before =\begin{document}= for cleveref to catch them.
#+BEGIN_SRC latex
  \AfterPackage{cleveref}{
    %\theoremstyle{plain}
    %\newtheorem{theorem}{Theorem}
  }
#+END_SRC

To redefine theorems (should not be used in nondraft)
#+BEGIN_SRC latex
  \def\renewtheorem#1{%
    \expandafter\let\csname#1\endcsname\relax
    \expandafter\let\csname c@#1\endcsname\relax
    \gdef\renewtheorem@envname{#1}
    \renewtheorem@secpar
  }
  \def\renewtheorem@secpar{\@ifnextchar[{\renewtheorem@numberedlike}{\renewtheorem@nonumberedlike}}
  \def\renewtheorem@numberedlike[#1]#2{\newtheorem{\renewtheorem@envname}[#1]{#2}}
  \def\renewtheorem@nonumberedlike#1{  
  \def\renewtheorem@caption{#1}
  \edef\renewtheorem@nowithin{\noexpand\newtheorem{\renewtheorem@envname}{\renewtheorem@caption}}
  \renewtheorem@thirdpar
  }
  \def\renewtheorem@thirdpar{\@ifnextchar[{\renewtheorem@within}{\renewtheorem@nowithin}}
  \def\renewtheorem@within[#1]{\renewtheorem@nowithin[#1]}
#+END_SRC
** Nesting

I want to nest statements neatly.
#+begin_src latex
  \usepackage{tikz}
  \usetikzlibrary{calc}
  \usepackage[framemethod=tikz]{mdframed}

  \ifdraft{
  \newenvironment{nest}
    {\vspace{-\topsep}\begin{internallinenumbers}}
    {\end{internallinenumbers}}
  }{
  \newenvironment{nest}
    {\vspace{-\topsep}}
    {}
  }

  \surroundwithmdframed[%
  singleextra={%
      \draw (O) -- ($(P -| O) - (0, .5em)$) -- +(8pt, 0);
      \node[circle,draw,fill=white,minimum width=0pt, inner sep=1.3pt] at
      ($(O)+(0,2pt)$) {};
    },
    firstextra={%
      \draw (O) -- ($(P -| O) - (0, .5em)$) -- +(8pt, 0);
    },
    middleextra={
      \draw (O) -- (P -| O);
    },
    secondextra={
      \draw (O) -- (P -| O);
      \node[circle,draw,fill=white,minimum width=0pt, inner sep=1.3pt] at
      ($(O)+(0,2pt)$) {};
    },
    hidealllines=true,
    innerrightmargin=0pt,
    innerleftmargin=8pt,
    skipabove=\topsep,
    skipbelow=0pt,
    innertopmargin=0pt,
    innerbottommargin=0pt]
    {nest}


  %\renewenvironment{nest}{}{}
#+end_src
* Unbreakable dash
This turns underscore into an active character that behaves normally in math
mode, and as a nonbreaking dash otherwise.
#+BEGIN_SRC latex
  %\let\@sb=_
  %\catcode`_=\active
  %\newcommand_{\ifmmode\@sb\else\babelhyphen{nobreak}\fi}
#+END_SRC
* Algorithms

  #+begin_src latex
    % From https://tex.stackexchange.com/questions/144840/vertical-loop-block-lines-in-algorithmicx-with-noend-option

    \usepackage{algorithm}
    \usepackage[noend]{algpseudocode}

    \usepackage{etoolbox}
    \usepackage{tikz}
    \usetikzlibrary{tikzmark}
    \usetikzlibrary{calc}

    \errorcontextlines\maxdimen

    % begin vertical rule patch for algorithmicx (http://tex.stackexchange.com/questions/144840/vertical-loop-block-lines-in-algorithmicx-with-noend-option)
    % note that some of the packages above are also needed
    \newcommand{\ALGtikzmarkcolor}{black}% customise this, if you want
    \newcommand{\ALGtikzmarkextraindent}{4pt}% customise this, if you want
    \newcommand{\ALGtikzmarkverticaloffsetstart}{-.5ex}% customise this, if you want
    \newcommand{\ALGtikzmarkverticaloffsetend}{-.5ex}% customise this, if you want
    \makeatletter
    \newcounter{ALG@tikzmark@tempcnta}

    \newcommand\ALG@tikzmark@start{%
        \global\let\ALG@tikzmark@last\ALG@tikzmark@starttext%
        \expandafter\edef\csname ALG@tikzmark@\theALG@nested\endcsname{\theALG@tikzmark@tempcnta}%
        \tikzmark{ALG@tikzmark@start@\csname ALG@tikzmark@\theALG@nested\endcsname}%
        \addtocounter{ALG@tikzmark@tempcnta}{1}%
    }

    \def\ALG@tikzmark@starttext{start}
    \newcommand\ALG@tikzmark@end{%
        \ifx\ALG@tikzmark@last\ALG@tikzmark@starttext
            % ignore this, the block was opened then closed directly without any other blocks in between (so just a \State basically)
            % don't draw a vertical line here
        \else
            \tikzmark{ALG@tikzmark@end@\csname ALG@tikzmark@\theALG@nested\endcsname}%
            \tikz[overlay,remember picture] \draw[\ALGtikzmarkcolor] let \p{S}=($(pic cs:ALG@tikzmark@start@\csname ALG@tikzmark@\theALG@nested\endcsname)+(\ALGtikzmarkextraindent,\ALGtikzmarkverticaloffsetstart)$), \p{E}=($(pic cs:ALG@tikzmark@end@\csname ALG@tikzmark@\theALG@nested\endcsname)+(\ALGtikzmarkextraindent,\ALGtikzmarkverticaloffsetend)$) in (\x{S},\y{S})--(\x{S},\y{E})--+(0.5em,0);%
        \fi
        \gdef\ALG@tikzmark@last{end}%
    }



    % the following line injects our new tikzmarking code
    \apptocmd{\ALG@beginblock}{\ALG@tikzmark@start}{}{\errmessage{failed to patch}}
    \pretocmd{\ALG@endblock}{\ALG@tikzmark@end}{}{\errmessage{failed to patch}}

    \algrenewcommand{\alglinenumber}[1]{\scriptsize\textbf{#1}}
    \newcommand{\alginput}{\par\@ifstar{\hspace*{1em}\textbf{Input:}\xspace}{\hspace*{\algorithmicindent}\textbf{Input:}\xspace}}
    \newcommand{\algoutput}{\par\@ifstar{\hspace*{1em}\textbf{Output:}}{\hspace*{\algorithmicindent}\textbf{Output:}\xspace}}

    \algrenewcommand{\algorithmiccomment}[1]{\hskip1em \texttt{//} #1}

  #+end_src
* Footer
#+BEGIN_SRC latex
  \makeatother
#+END_SRC
