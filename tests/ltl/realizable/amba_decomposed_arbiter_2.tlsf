INFO {
  TITLE:       "Amba AHB - Decomposed - Arbiter"
  DESCRIPTION: "Arbiter component of the decomposed Amba AHB Arbiter"
  SEMANTICS:   Mealy
  TARGET:      Mealy
}

GLOBAL {
  PARAMETERS {
    n = 2;
  }

  DEFINITIONS {
    // ensures mutual exclusion on an n-ary bus
    mutual_exclusion(bus) =
     mone(bus,0,(SIZEOF bus) - 1);

    // ensures that none of the signals
    // bus[i] - bus[j] is HIGH
    none(bus,i,j) =
      &&[i <= t <= j]
        !bus[t];

    // ensures that at most one of the signals
    // bus[i] - bus[j] is HIGH
    mone(bus,i,j) =
    i > j : false
    i == j : true
    i < j :
      // either no signal of the lower half is HIGH and at 
      // most one signal of the upper half is HIGH
      (none(bus, i, m(i,j)) && mone(bus, m(i,j) + 1, j)) ||
      // or at most one signal of the lower half is HIGH
      // and no signal in of the upper half is HIGH
      (mone(bus, i, m(i,j)) && none(bus, m(i,j) + 1, j));

    // returns the position between i and j
    m(i,j) = (i + j) / 2;    
  } 
}

MAIN {
  INPUTS {
    HBUSREQ[n];
    ALLREADY;
  } 

  OUTPUTS {
    HGRANT[n];
    BUSREQ;
    DECIDE;
  }

  ASSUMPTIONS {
    // the component is not eventually disabled
    G F ALLREADY;

    // initially, the component is idle
    ALLREADY;
  }

  INVARIANTS {
    // at every time exactely one master is granted
    mutual_exclusion(HGRANT);
    ||[0 <= i < n] HGRANT[i];

    // if not ready the grants stay unchanged
    &&[0 <= i < n] (!ALLREADY -> (X HGRANT[i] <-> HGRANT[i]));

    // every request is eventually granted
    &&[0 <= i < n] (HBUSREQ[i] -> F (!HBUSREQ[i] || HGRANT[i]));

    // the BUSREQ signal mirrors the HBUSREQ[i] signal of the 
    // currently granted master i
    &&[0 <= i < n] (HGRANT[i] -> (BUSREQ <-> HBUSREQ[i]));

    // decisions can only be taken when the component is ready
    !ALLREADY -> !DECIDE;

    // the DECIDE signal marks when another master is granted in the
    // next step
    DECIDE <-> (||[0 <= i < n] !(X HGRANT[i] <-> HGRANT[i]));

    // if there are no requests master 0 is granted
    (&&[0 <= i < n] !HBUSREQ[i]) && DECIDE -> X HGRANT[0];
  }

  GUARANTEES {
    // initial values
    !DECIDE && HGRANT[0];
  }
}
//#!SYNTCOMP
//STATUS : realizable
//REF_SIZE : 19
//#.
